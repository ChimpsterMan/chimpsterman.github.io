{
  "name": "OpenGL Minecraft",
  "filename": "openglminecraft",
  "date": "8/15/2020",
  "author": "Erik Nilsson",
  "img": "http://emnilsson.com/pics/openglminecraft.png",
  "vid": "r62HrHrLuXE",
  "description": "A project to learn a little bit more about how rendering works and practice to improve my object-oriented code and organization. I used glad and GLFW for the OpenGL rendering framework and loading images. The two major components of the project were the renderer and Perlin noise for terrain generation. The renderer allows for varying images and Block Types to be used and positioned. There are realistic shadows and lighting as well. In working on this project I learned how to work with different framebuffers, vertex buffer objects, and shaders(GLSL). To make the renderer run faster, I used several optimization techniques to hide hidden faces of the blocks and render them in sets to improve performance and allow for much more massive scenes. The light and shadows use a point light of my own making and features variable biasing to remove Acane and PCF averaging to smooth out the shadow resolution. I could write a whole paper on all the things involved with this but I am doing this for fun and am too lazy. To make it more interesting if you would like to learn more about it, feel free to contact me and I will be more than happy to talk. Please also check out the video preview made by my friend Sandy.",  "link": "https://github.com/ChimpsterMan/OpenGLMinecraft/blob/master/OpenGlMinecraftEXE.zip",
  "linkCode": "https://github.com/ChimpsterMan/OpenGLMinecraft"
}