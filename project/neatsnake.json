{
  "name": "Java Neat Snake",
  "filename": "neatsnake",
  "date": "5/9/19",
  "author": "Erik Nilsson",
  "img": "http://emnilsson.com/pics/javaneatsnake.png",
  "vid": "",
  "description": "A machine learning attempt to make a snake ai using the neat algorithm. It was my final project of Ap CompSci A and it is formatted with class files very well. The main idea I had was to write a machine learning snake program that not only changed its knowledge but the very structure of its brain as well. I had to be very creative and make my own solution to the problem. While the theory was sound, it ended up only partially working in the end and I ran out of time to rewrite the broken code. Since the machine learning works on the basis of evolution where the best preforming minds are sent to their children who also get small mutations in the hope of preforming better. The problem is that when a change in the brain structure happens, it is not stored whether that new part of the brain controls metaphorically a new arm or a new leg. When those two get confused, the whole evolution breaks. The neural network manager however supports any type of network and even allows for unstructured ones to form in a type of web. This was intended to make it as successful as humanly possible since even the network changes. I may work on it in the future but as of now, the learning portion has major bugs. It opens in eclipse and uses the processing library.",  "link": "",
  "linkCode": "https://github.com/enilsson18/NeatSnake"
}